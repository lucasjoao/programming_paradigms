##### Relatório 08 - Listas e array                                        #####
##### Lucas João Martins                                                   #####

##### Parte 1                                                              #####

  Python possui uma alocação "dinâmica" de listas, que pode ser declarado
simplesmente como:

    list = []

  Como não há preocupação com tipagens na linguagem, pode existir listas com
elementos de diferentes tipos. Além disso, pode-se realizar operações dentro
de colchetes para gerar listas, que é chamado de list comprehension (baseado
na implementação existente em Haskell que é semelhante à notação de definição
de conjuntos na matemática). Array em Python é um pouco diferente, sendo que
ela é limitada quanto à tipagem de seus elementos. Em ambos os casos, os
elementos são modificados quando passados por parâmetros, para evitar
inconsistências, cópias são criadas.
  Em C, os arrays podem ser declarados usando colchetes [] ou usando a notação
de ponteiros. Por conta da tipagem, C não permite que um array contenha
elementos de diferentes tipos. A inicialização dos arrays pode ser de forma
dinâmica (e.g. com malloc) ou com o uso de chaves compondo os elementos
presentes no array. Em C não há implementações nativas para listas. Além disso,
arrays passados como parâmetros apontam para a posição de memória onde o
elemento está.

##### Referências                                                          #####
  - Slides fornecidos pelo professor.
